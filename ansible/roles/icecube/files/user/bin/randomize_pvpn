#!/usr/bin/env python3 

import random
import os
import pprint
from subprocess import Popen, PIPE, STDOUT


"""
Ugly script to iterate psuedo-randomly over a selection of countries
Always selects a different country than we're currently connected to
Probably it's still buggy, use at own risk
"""

FALLBACK_COUNTRIES = ["NL", "BE","AT","FR"]

def remove_current_country(all_countries: list) -> list:
    """ Do not connect twice to the same country in a row """
    stat = Popen('protonvpn-cli status', shell=True, stdin=PIPE, stdout=PIPE, stderr=STDOUT, close_fds=True)
    output = stat.stdout.read().decode()
    if "No active ProtonVPN" in output:
        return all_countries
    get_server = [ x for x in output.split('\n') if x.startswith("Server:") ][0]
    last_choice = get_server.split()[1].split('#')[0]
    try:
        print(f"removing country {last_choice} from choices")
        all_countries.pop(all_countries.index(last_choice))
    except ValueError:
        pass
    return all_countries


def new_peer(country_selection: list) -> None:
    """ select a new peer from given country list """
    choice = random.choice(country_selection)
    print(f"selecting new country {choice} to connect to")
    reconnect = Popen(f"protonvpn-cli c --c {choice}", shell=True, stdin=PIPE, stdout=PIPE, stderr=STDOUT, close_fds=True)
    output = reconnect.communicate()
    print(f"{output[0]}")


def main():
    """ get the music starte """
    load_countries: list = os.getenv("countries")
    if load_countries:
        countries: list = os.getenv("countries").split(",")
    elif load_countries is None:
        print(f"no countries env found, using fallback: {FALLBACK_COUNTRIES}")
        countries = FALLBACK_COUNTRIES
    my_selection = remove_current_country(countries)
    new_peer(my_selection)


if __name__ == "__main__":
    main()
